{"ast":null,"code":"var _jsxFileName = \"/Users/daviddaniliuc/My Drive/React Notes App Tutorial/mynotes/src/pages/NotePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// import notes from \"../assets/data\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { ReactComponent as ArrowLeft } from \"../assets/arrow-left.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = () => {\n  _s();\n  let noteId = useParams().id;\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n  let getNote = async () => {\n    let response = await fetch(`http://localhost:8000/notes/${noteId}`);\n    let data = await response.json();\n    setNote(data);\n  };\n  let updateNote = async () => {\n    await fetch(`http://localhost:8000/notes/${noteId}`);\n  };\n\n  // let note = notes.find((note) => note.id === Number(noteId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({\n          ...note,\n          body: e.target.value\n        });\n      },\n      value: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n_s(NotePage, \"KaXLZ8oIqTvfoX6IlsTu3Ydlqp8=\", false, function () {\n  return [useParams];\n});\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","ReactComponent","ArrowLeft","jsxDEV","_jsxDEV","NotePage","_s","noteId","id","note","setNote","getNote","response","fetch","data","json","updateNote","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","body","target","value","_c","$RefreshReg$"],"sources":["/Users/daviddaniliuc/My Drive/React Notes App Tutorial/mynotes/src/pages/NotePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import notes from \"../assets/data\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { ReactComponent as ArrowLeft } from \"../assets/arrow-left.svg\";\n\nconst NotePage = () => {\n\tlet noteId = useParams().id;\n\tlet [note, setNote] = useState(null);\n\n\tuseEffect(() => {\n\t\tgetNote();\n\t}, [noteId]);\n\n\tlet getNote = async () => {\n\t\tlet response = await fetch(`http://localhost:8000/notes/${noteId}`);\n\t\tlet data = await response.json();\n\t\tsetNote(data);\n\t};\n\n\tlet updateNote = async () => {\n\t\tawait fetch(`http://localhost:8000/notes/${noteId}`);\n\t};\n\n\t// let note = notes.find((note) => note.id === Number(noteId));\n\treturn (\n\t\t<div className=\"note\">\n\t\t\t<div className=\"note-header\">\n\t\t\t\t<h3>\n\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t<ArrowLeft />\n\t\t\t\t\t</Link>\n\t\t\t\t</h3>\n\t\t\t</div>\n\n\t\t\t<textarea\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tsetNote({ ...note, body: e.target.value });\n\t\t\t\t}}\n\t\t\t\tvalue={note?.body}\n\t\t\t></textarea>\n\t\t</div>\n\t);\n};\n\nexport default NotePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,SAASC,cAAc,IAAIC,SAAS,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,IAAIC,MAAM,GAAGR,SAAS,CAAC,CAAC,CAACS,EAAE;EAC3B,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACfa,OAAO,CAAC,CAAC;EACV,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,IAAII,OAAO,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BN,MAAO,EAAC,CAAC;IACnE,IAAIO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAChCL,OAAO,CAACI,IAAI,CAAC;EACd,CAAC;EAED,IAAIE,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMH,KAAK,CAAE,+BAA8BN,MAAO,EAAC,CAAC;EACrD,CAAC;;EAED;EACA,oBACCH,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACpBd,OAAA;MAAKa,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC3Bd,OAAA;QAAAc,QAAA,eACCd,OAAA,CAACJ,IAAI;UAACmB,EAAE,EAAC,GAAG;UAAAD,QAAA,eACXd,OAAA,CAACF,SAAS;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENnB,OAAA;MACCoB,QAAQ,EAAGC,CAAC,IAAK;QAChBf,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEiB,IAAI,EAAED,CAAC,CAACE,MAAM,CAACC;QAAM,CAAC,CAAC;MAC3C,CAAE;MACFA,KAAK,EAAEnB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEiB;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAER,CAAC;AAACjB,EAAA,CArCID,QAAQ;EAAA,QACAN,SAAS;AAAA;AAAA8B,EAAA,GADjBxB,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}